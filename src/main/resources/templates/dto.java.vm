package ${package.Entity};

import com.trydo.platform.commons.base.BaseDto;
import java.util.Date;
import java.io.Serializable;
#if(${entityLombokModel})

import lombok.Data;
import lombok.ToString;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end

/**
 * Company:     b2c哎呦商城
 * Department:  研发一组
 * Title:       [smart-customer-hotline — ${entity}DTO 模块]
 * Description: [${entity}DTO 实体类]
 * Created on:  ${date}
 * Contacts:    [who.seek.me@java98k.vip]
 * @version     V1.1.0
 * @author      ${author}
 */
#if(${entityLombokModel})
@Data
@ToString
#if(${superEntityClass})
@EqualsAndHashCode(callSuper = true)
#else
@EqualsAndHashCode(callSuper = false)
#end
@Accessors(chain = true)
@ApiModel
#end
#if(${table.convert})
#end
#if(${superEntityClass})
public class ${entity}DTO extends BaseDto implements Serializable  {
#elseif(${activeRecord})
public class ${entity}DTO extends BaseDto implements Serializable  {
#else
public class ${entity}DTO implements Serializable {
#end

    private static final long serialVersionUID = 1L;

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
#if(${field.keyFlag})
## 主键
#if(${field.keyIdentityFlag})
    @ApiModelProperty(value = "${field.comment}")
#elseif(!$null.isNull(${idType}) && "$!idType" != "")
    @ApiModelProperty(value = "${field.comment}")
#elseif(${field.convert})
    @ApiModelProperty(value = "${field.comment}")
#end
## 普通字段
#elseif(${field.fill})
## -----   存在字段填充设置   -----
#if(${field.convert})
    @ApiModelProperty(value = "${field.comment}")
#else
    @ApiModelProperty(value = "${field.comment}")
#end
#elseif(${field.convert})
    @ApiModelProperty(value = "${field.comment}")
#end
## 乐观锁注解
#if(${versionFieldName}==${field.name})
    @Version
#end
## 逻辑删除注解
#if(${logicDeleteFieldName}==${field.name})
    @TableLogic
#end
    private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end

    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

#if(${entityBuilderModel})
    public ${entity}DTO set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
        this.${field.propertyName} = ${field.propertyName};
#if(${entityBuilderModel})
        return this;
#end
    }
#end
#end

#if(${entityColumnConstant})
#foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} = "${field.name}";

#end
#end

#if(!${entityLombokModel})
    @Override
    public String toString() {
        return "${entity}DTO{" +
#foreach($field in ${table.fields})
#if($!{velocityCount}==1)
        "${field.propertyName}=" + ${field.propertyName} +
#else
        ", ${field.propertyName}=" + ${field.propertyName} +
#end
#end
        "}";
    }
#end
}
